{
  // The "in-game" name of the level. Should be lower case, with dashes (GOAL symbol name)
  // the name of this file, and the folder this file is in must have the same name.
  "long_name": "sb-eco",
  // The file name, should be upper case and 8 characters or less.
  "iso_name": "SBECO",
  // The nickname, should be exactly 3 characters
  "nickname": "sbe", // 3 char name, all lowercase
  // Background mesh file.
  // Must have vertex colors. Use the blender cycles renderer, bake, diffuse, uncheck color,
  // and bake to vertex colors. For now, only the first vertex color group is used, so make sure you
  // only have 1.
  "gltf_file": "custom_assets/jak1/levels/sb-eco/sb-eco.glb",

  // automatically set wall vs. ground based on angle. Useful if you don't want to assign this yourself
  "automatic_wall_detection": true,
  "automatic_wall_angle": 45.0,

  // if your mesh has triangles with incorrect orientation, set this to make all collision mesh triangles double sided
  // this makes collision 2x slower and bigger, so only use if really needed
  "double_sided_collide": false,

  // available res-lump tag types:
  // integer types: int32, uint32, enum-int32, enum-uint32
  // float types: float, meters (1 meter = 4096.0 units), degrees (65536.0 = 360Â°)
  // vector types: vector (normal floats), vector4m (meters), vector3m (meters with w set to 1.0), vector-vol (normal floats with w in meters), movie-pos (meters with w in degrees)
  // special types: symbol, type, string, eco-info, cell-info, buzzer-info, water-height
  //
  // examples:
  //
  // adds a float tag 'spring-height' with value of 200 meters (1 meter = 4096.0 units):
  // "spring-height": ["meters", 200.0]
  //
  // adds a degrees tag 'rotoffset':
  // "rotoffset": ["degrees", -45.0]
  //
  // adds a movie-pos tag:
  // "movie-pos": ["movie-pos", [100.22, -25.3, 99.5, 180.0]]
  //
  // adds an enum tag 'options':
  // "options": ["enum-int32", "(fact-options large)"]
  //
  // adds a water-height tag:
  // "water-height": ["water-height", 25.0, 0.5, 2.0, "(water-flags wt08 wt03 wt01)"]
  //
  // adds an eco-info tag:
  // "eco-info": ["eco-info", "(pickup-type health)", 2]
  //
  // adds a cell-info tag:
  // "eco-info": ["cell-info", "(game-task training-gimmie)"]
  //
  // adds a buzzer-info tag:
  // "eco-info": ["buzzer-info", "(game-task training-buzzer)", 5]
  //
  // adds a 'symbol' tag (using the 'type' and 'string' lump types works the same way):
  // "symbol-list": ["symbol", "sym-1", "sym-2"]

  // The base actor id for your custom level. If you have multiple levels, this should be unique!
  "base_id": 99,

  // All art groups you want to use in your custom level. Will add their models and corresponding textures to the FR3 file.
  // Note: You will still have to add them to your level's .gd file.
  "art_groups": [
    "plat-ag", 
    "water-anim-sunken-ag",
    "water-anim-jungle-ag",
    "misty-part.o"
  ],

  // If you have any custom models in the "custom_assets/jak1/models/custom_levels" folder that you want to use in your level, add them to this list.
  // Note: Like with art groups, these should also be added to your level's .gd file.
  "custom_models": [/* "test-actor" */],

  // Any textures you want to include in your custom level. This is mainly useful for things such as the zoomer HUD,
  // which is not in the common level files and has no art group associated with it.
  // To get a list of all the textures, you can extract all of the game's textures
  // by setting "save_texture_pngs" to true in the decompiler config.
  "textures": [
    // all textures required for the zoomer HUD
    // "zoomerhud",
    // "zoomerhud-dial",
    // "zoomerhud-main-02",
    // "zoomerhud-main-03",
    // "zoomerhud-pieslice",
    // "zoomerhud-heatbg-01",
    // "zoomerhud-main-03arrow",
    // "zoomerhud-main-03knob"
  ],

  // Ambients you want to use in your custom level. Ambients can be used for various things like changing the music variation (flava),
  // adding ambient sounds, level name hints, etc.
  "ambients": [
    {
      "trans": [-21.6238, 20.0496, 17.1191, 10.0],
      "bsphere": [-21.6238, 20.0496, 17.1191, 15.0],
      "lump": {
        "name": "test-ambient",
        "type": "'hint",
        "text-id": ["enum-uint32", "(text-id fuel-cell)"], // text id for the "POWER CELL" text
        "play-mode": "'notice"
      }
    }
  ],

  "actors" : [
    {
      "trans": [-21.6238, 20.0496, 17.1191], // translation
      "etype": "fuel-cell",  // actor type
      "game_task": "(game-task none)", // associated game task (for powercells, etc)
      "quat": [0, 0, 0, 1], // quaternion
      "bsphere": [-21.6238, 19.3496, 17.1191, 10], // bounding sphere
      "lump": {
        "name": "test-fuel-cell",
        "eco-info": ["cell-info", "(game-task none)"]
      }
    },

    {
      "trans": [-15.2818, 15.2461, 17.1360], // translation
      "etype": "crate",  // actor type
      "game_task": "(game-task none)", // associated game task (for powercells, etc)
      "quat": [0, 0, 0, 1], // quaternion
      "bsphere": [-15.2818, 15.2461, 17.1360, 10], // bounding sphere
      "lump": {
        "name": "test-crate",
        "crate-type": "'steel",
        "eco-info": ["eco-info", "(pickup-type money)", 10]
      }
    },

    {
      "trans": [-5.4630, 17.4553, 1.6169], // translation
      "etype": "eco-yellow",  // actor type
      "game_task": "(game-task none)", // associated game task (for powercells, etc)
      "quat": [0, 0, 0, 1], // quaternion
      "bsphere": [-5.4630, 17.4553, 1.6169, 10], // bounding sphere
      "lump": {
        "name": "test-eco"
      }
    },
    {
      "trans": [-5.41, 3.5, 28.42], // translation
      "etype": "test-actor",  // actor type
      "game_task": 0, // associated game task (for powercells, etc)
      "quat": [0, 0, 0, 1], // quaternion
      "bsphere": [-7.41, 3.5, 28.42, 10], // bounding sphere
      "lump": {
        "name": "test-actor"
      }
    },
    // {
    //   "trans": [-7.41, 3.5, 28.42], // translation
    //   "etype": "plat",  // actor type
    //   "game_task": "(game-task none)", // associated game task (for powercells, etc)
    //   "quat": [0, 0, 0, 1], // quaternion
    //   "bsphere": [-7.41, 3.5, 28.42, 10], // bounding sphere
    //   "lump": {
    //     "name": "test-plat"
    //   }
    // }
 /*    {
      //"aid": 48888,
      "trans": [ -99.10, 167.58, 34.45 ], // translation needs to also sit on top of water volume plane
      "etype": "jungle-water", // actor type
      "game_task": 0, // associated game task (for powercells, etc)
      "quat": [ 0, -0.54, 0, 0.84 ], // quaternion
      "bsphere": [ -99.10, 167.58, 34.45, 10 ], // bounding sphere
      "lump": {
       "name": "WaterShape-34",
       "look":  ["int32", 34],
       "scale": [ "float", 1.0 ]
      }
    }, */

/*     {
      "aid": 50000,
      "trans": [ -99.10, 167.58, 34.45 ], // translation needs to also sit on top of water volume plane
      "etype": "water-anim", // actor type
      "game_task": 0, // associated game task (for powercells, etc)
      "quat": [ 0, 0, 0, 1 ], // quaternion
      "bsphere": [ -99.10, 167.58, 34.45, 0.0 ], // bounding sphere
      "lump": {
        "vol": [
          "vector",
          [ 1.0, 0.0, 0.0, 3463.92 ], // +x (+x in blender)
          [ -1.0, 0.0, 0.0, -633118.72 ], // -x (inverted x in blender because of the -1)
          [ 0.0, 1.0, 0.0, 0.0 ], // +y (+z in blender)
          [ 0.0, -1.0, 0.0, 34267.1616 ], // -y (inverted z in blender because of the -1)
          [ 0.0, 0.0, 1.0, 3871784.96 ], // +z (-y in blender)
          [ 0.0, 0.0, -1.0, 1035509.76 ] // -z (+y in blender)
        ],
        "name": "sb-vol1",
        "water-height": [ "float", 4096.0, 2048.0, 8192.0, 1048588.0 ], // camera height (top of water volume plane + 4192), ?, wadledept, flags "water-height": ["water-height", 0.0, 0.5, 2.0, "(water-flags wt08 wt03 wt01)"],
        "look": [ "int32", 36 ],
        "vis-dist": [ "meters", 200.0 ]
        //"scale": [ "float", 5.0 ]
      }
    }, */

    {
      "aid": 48888,
      "trans": [ -99.10, 167.58, 34.45 ], // translation needs to also sit on top of water volume plane
      "etype": "water-anim", // actor type
      "game_task": 0, // associated game task (for powercells, etc)
      "quat": [ 0, 0, 0, 1 ], // quaternion
      "bsphere": [ -99.10, 167.58, 34.45, 200.0 ], // bounding sphere
      "lump": {
        "vol": [
          "vector",
          [ 1.0, 0.0, 0.0, 1.0 ], // +x (+x in blender)
          [ -1.0, 0.0, 0.0, 1.0 ], // -x (inverted x in blender because of the -1)
          [ 0.0, 1.0, 0.0, 1.0 ], // +y (+z in blender)
          [ 0.0, -1.0, 0.0, 1.0 ], // -y (inverted z in blender because of the -1)
          [ 0.0, 0.0, 1.0, 1.0 ], // +z (-y in blender)
          [ 0.0, 0.0, -1.0, 1.0 ] // -z (+y in blender)
        ],
        "name": "afon-water",
        "water-height": [ "float", 1466873.6, 2048.0, 8192.0, 1048588.0 ], // camera height (top of water volume plane + 4192), ?, wadledept, flags "water-height": ["water-height", 0.0, 0.5, 2.0, "(water-flags wt08 wt03 wt01)"],
        "look": [ "int32", 8 ],
        "vis-dist": [ "meters", 200.0 ],
        "scale": [ "float", 5.0 ]
      }
    },

    {
      "trans": [ -109.0, 8.2, -192.0 ], // translation -1196.41 354.36 178.98
      "etype": "sbeco-part", // actor type
      "game_task": 0, // associated game task (for powercells, etc)
      "quat": [ -2, -1.825, -2, 0.905 ], // quaternion
      "bsphere": [ -109.0, 8.2, -192.0, 50 ], // bounding sphere
      "lump": {
        "name": "sbwaterfall1",
        "effect-name": "'waterfall",
        "art-name": "group-afon-waterfall3",
        "effect-param": [ "float", 11.0, 40.0, 12.0, 80.0 ], // ??, ??, ??, ??
        "cycle-speed": [ "float", -1.0, 0.0 ],
        "vis-dist": [ "meters", 200.0 ]
      }
    }
    
/*     {
      "trans": [ -109.0, 8.2, -192.0 ], // translation
      "etype": "misty-part", // actor type
      "game_task": "(game-task none)", // associated game task (for powercells, etc)
      "quat": [ 0, 0, 0, 1 ], // quaternion
      "bsphere": [ -243.95, 100.45, 358.92, 10 ], // bounding sphere
      "lump": {
        "name": "sbfog1",
        "art-name": "group-misty-fog",
        "effect-name": "'fog",
        "effect-param": [ "float", 11.0, 40.0, 12.0, 80.0 ], // ??, ??, ??, ??
        "cycle-speed": [ "float", -1.0, 0.0 ],
        "vis-dist": [ "meters", 200.0 ]
      }
    } */
  ]
}